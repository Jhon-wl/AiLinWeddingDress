<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ailin.dao.ConsumerMapper" >
  <resultMap id="BaseResultMap" type="com.ailin.model.Consumer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update" property="lastUpdate" jdbcType="TIMESTAMP" />
    <result column="visibility" property="visibility" jdbcType="TINYINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="head_img_url" property="headImgUrl" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="wallet" property="wallet" jdbcType="DECIMAL" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="default_address_id" property="defaultAddressId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, last_update, visibility, user_name, `password`, salt, nick_name, 
    head_img_url, score, wallet, gender, email, telephone, birthday, default_address_id
  </sql>
  <sql id="Message_Column_List" >
    id, create_time, last_update, visibility, from_id, to_id, content, `type`
  </sql>
  <select id="selectByConsumerNameSelective" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_consumer
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_consumer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_consumer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ailin.model.Consumer" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_consumer (create_time, last_update, visibility, 
      user_name, `password`, salt, 
      nick_name, head_img_url, score, 
      wallet, gender, email, 
      telephone, birthday, default_address_id
      )
    values (#{createTime,jdbcType=TIMESTAMP}, #{lastUpdate,jdbcType=TIMESTAMP}, #{visibility,jdbcType=TINYINT}, 
      #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{headImgUrl,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{wallet,jdbcType=DECIMAL}, #{gender,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{defaultAddressId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ailin.model.Consumer" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_consumer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      visibility,
      user_name,
      `password`,
      salt,
      nick_name,
      head_img_url,
      score,
      wallet,
      gender,
      email,
      telephone,
      birthday,
      default_address_id,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{visibility,jdbcType=TINYINT},
      #{userName,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR},
      #{nickName,jdbcType=VARCHAR},
      #{headImgUrl,jdbcType=VARCHAR},
      #{score,jdbcType=INTEGER},
      #{wallet,jdbcType=DECIMAL},
      #{gender,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR},
      #{telephone,jdbcType=VARCHAR},
      #{birthday,jdbcType=TIMESTAMP},
      #{defaultAddressId,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ailin.model.Consumer" >
    update tb_consumer
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null" >
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="visibility != null" >
        visibility = #{visibility,jdbcType=TINYINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headImgUrl != null" >
        head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="wallet != null" >
        wallet = #{wallet,jdbcType=DECIMAL},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="defaultAddressId != null" >
        default_address_id = #{defaultAddressId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ailin.model.Consumer" >
    update tb_consumer
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      visibility = #{visibility,jdbcType=TINYINT},
      user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      wallet = #{wallet,jdbcType=DECIMAL},
      gender = #{gender,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      default_address_id = #{defaultAddressId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>